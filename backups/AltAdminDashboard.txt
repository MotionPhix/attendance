<script setup lang="ts">
import { computed } from 'vue';
import { Link } from '@inertiajs/vue3';
import {
  Users,
  ClipboardCheck,
  DollarSign,
  Calendar,
  LogIn,
  LogOut,
  FileText
} from 'lucide-vue-next';
import AppLayout from '@/Layouts/AppLayout.vue';
import dayjs from 'dayjs';

const props = defineProps({
  employeeStats: Object,
  attendanceStats: Object,
  salaryStats: Object,
  recentActivities: Array,
  pendingLeaveRequests: Array,
  topPerformers: Array,
  currentDate: String,
  currentMonth: String
});

// Format helpers
const formatCurrency = (value) => {
  return new Intl.NumberFormat('en-US', {
    style: 'currency',
    currency: 'USD'
  }).format(value);
};

const formatDate = (dateString) => {
  return dayjs(dateString).format('MMM D, YYYY');
};

const formatDateTime = (dateTimeString) => {
  return dayjs(dateTimeString).format('MMM D, YYYY h:mm A');
};

// Chart data for attendance trends
const attendanceChartSeries = computed(() => [
  {
    name: 'Attendance Rate',
    type: 'line',
    data: props.attendanceStats.monthly_trends.map(item => item.attendance_rate)
  },
  {
    name: 'Late Arrivals',
    type: 'column',
    data: props.attendanceStats.monthly_trends.map(item => item.late_arrivals)
  },
  {
    name: 'Early Departures',
    type: 'column',
    data: props.attendanceStats.monthly_trends.map(item => item.early_departures)
  }
]);

const attendanceChartOptions = computed(() => ({
  chart: {
    height: 350,
    type: 'line',
    stacked: false,
    toolbar: {
      show: false
    },
    fontFamily: 'inherit',
  },
  stroke: {
    width: [3, 1, 1],
    curve: 'smooth'
  },
  plotOptions: {
    bar: {
      columnWidth: '50%'
    }
  },
  colors: ['#3b82f6', '#f59e0b', '#ef4444'],
  fill: {
    opacity: [0.85, 0.75, 0.75],
    gradient: {
      inverseColors: false,
      shade: 'light',
      type: "vertical",
      opacityFrom: 0.85,
      opacityTo: 0.55,
    }
  },
  labels: props.attendanceStats.monthly_trends.map(item => item.month),
  markers: {
    size: 0
  },
  xaxis: {
    type: 'category'
  },
  yaxis: [
    {
      title: {
        text: 'Attendance Rate (%)',
      },
      min: 0,
      max: 100
    },
    {
      opposite: true,
      title: {
        text: 'Count',
      },
      min: 0
    }
  ],
  tooltip: {
    shared: true,
    intersect: false,
    y: {
      formatter: function (value, { seriesIndex }) {
        if (seriesIndex === 0) {
          return value.toFixed(1) + '%';
        }
        return value;
      }
    }
  },
  legend: {
    position: 'top'
  }
}));

// Chart data for department distribution
const departmentChartSeries = computed(() =>
  props.employeeStats.by_department.map(dept => dept.count)
);

const departmentChartOptions = computed(() => ({
  chart: {
    type: 'pie',
    fontFamily: 'inherit',
  },
  labels: props.employeeStats.by_department.map(dept => dept.department),
  colors: [
    '#3b82f6', '#f59e0b', '#10b981', '#8b5cf6', '#ec4899',
    '#6366f1', '#14b8a6', '#f43f5e', '#84cc16', '#06b6d4'
  ],
  legend: {
    position: 'bottom'
  },
  responsive: [{
    breakpoint: 480,
    options: {
      chart: {
        width: 300
      },
      legend: {
        position: 'bottom'
      }
    }
  }],
  dataLabels: {
    formatter: function (val, opts) {
      return opts.w.config.series[opts.seriesIndex];
    }
  }
}));
</script>

<template>
  <AppLayout title="Admin Dashboard">
    <template #header>
      <h2 class="font-semibold text-xl text-gray-800 dark:text-gray-200 leading-tight">
        Admin Dashboard
      </h2>
    </template>

    <div class="py-12">
      <div class="max-w-7xl mx-auto sm:px-6 lg:px-8">
        <!-- Date and Quick Stats -->
        <div class="mb-6">
          <div class="flex flex-wrap items-center justify-between mb-4">
            <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
              {{ currentDate }}
            </h3>
            <div class="flex space-x-2">
              <Link :href="route('admin.employees.index')" class="btn-secondary">
                <Users class="w-4 h-4 mr-1" />
                Manage Employees
              </Link>
              <Link :href="route('admin.salaries.generate')" class="btn-primary">
                <Calculator class="w-4 h-4 mr-1" />
                Generate Salaries
              </Link>
            </div>
          </div>

          <!-- Quick Stats Cards -->
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            <!-- Total Employees -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <div class="flex items-center">
                <div class="p-3 rounded-full bg-blue-100 dark:bg-blue-900">
                  <Users class="h-6 w-6 text-blue-600 dark:text-blue-300" />
                </div>
                <div class="ml-4">
                  <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Total Employees</p>
                  <p class="text-2xl font-semibold text-gray-900 dark:text-white">{{ employeeStats.total }}</p>
                  <p class="text-sm text-gray-600 dark:text-gray-300">
                    {{ employeeStats.active }} active, {{ employeeStats.on_leave }} on leave
                  </p>
                </div>
              </div>
            </div>

            <!-- Today's Attendance -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <div class="flex items-center">
                <div class="p-3 rounded-full bg-green-100 dark:bg-green-900">
                  <ClipboardCheck class="h-6 w-6 text-green-600 dark:text-green-300" />
                </div>
                <div class="ml-4">
                  <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Today's Attendance</p>
                  <p class="text-2xl font-semibold text-gray-900 dark:text-white">
                    {{ attendanceStats.today.present }} / {{ employeeStats.active }}
                  </p>
                  <p class="text-sm text-gray-600 dark:text-gray-300">
                    {{ attendanceStats.today.late }} late, {{ attendanceStats.today.absent }} absent
                  </p>
                </div>
              </div>
            </div>

            <!-- Monthly Salary -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <div class="flex items-center">
                <div class="p-3 rounded-full bg-amber-100 dark:bg-amber-900">
                  <DollarSign class="h-6 w-6 text-amber-600 dark:text-amber-300" />
                </div>
                <div class="ml-4">
                  <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Monthly Salary</p>
                  <p class="text-2xl font-semibold text-gray-900 dark:text-white">
                    {{ formatCurrency(salaryStats.total_net_amount) }}
                  </p>
                  <p class="text-sm text-gray-600 dark:text-gray-300">
                    {{ salaryStats.processed_count }} processed, {{ salaryStats.paid_count }} paid
                  </p>
                </div>
              </div>
            </div>

            <!-- Pending Leaves -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <div class="flex items-center">
                <div class="p-3 rounded-full bg-purple-100 dark:bg-purple-900">
                  <Calendar class="h-6 w-6 text-purple-600 dark:text-purple-300" />
                </div>
                <div class="ml-4">
                  <p class="text-sm font-medium text-gray-500 dark:text-gray-400">Pending Leaves</p>
                  <p class="text-2xl font-semibold text-gray-900 dark:text-white">
                    {{ pendingLeaveRequests.length }}
                  </p>
                  <p class="text-sm text-gray-600 dark:text-gray-300">
                    Requests awaiting approval
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Main Content -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
          <!-- Left Column -->
          <div class="lg:col-span-2 space-y-6">
            <!-- Attendance Trends Chart -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-4">
                Monthly Attendance Trends
              </h3>
              <div class="h-80">
                <apexchart
                  type="area"
                  height="100%"
                  :options="attendanceChartOptions"
                  :series="attendanceChartSeries"
                ></apexchart>
              </div>
            </div>

            <!-- Department Distribution -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
                  Department Distribution
                </h3>
                <Link :href="route('admin.departments.index')" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">
                  View All
                </Link>
              </div>
              <div class="h-80">
                <apexchart
                  type="pie"
                  height="100%"
                  :options="departmentChartOptions"
                  :series="departmentChartSeries"
                ></apexchart>
              </div>
            </div>
          </div>

          <!-- Right Column -->
          <div class="space-y-6">
            <!-- Recent Activities -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-4">
                Recent Activities
              </h3>
              <div class="space-y-4">
                <div v-for="(activity, index) in recentActivities" :key="index" class="flex items-start">
                  <div class="flex-shrink-0">
                    <div v-if="activity.type === 'check_in'" class="p-2 rounded-full bg-green-100 dark:bg-green-900">
                      <LogIn class="h-4 w-4 text-green-600 dark:text-green-300" />
                    </div>
                    <div v-else-if="activity.type === 'check_out'" class="p-2 rounded-full bg-blue-100 dark:bg-blue-900">
                      <LogOut class="h-4 w-4 text-blue-600 dark:text-blue-300" />
                    </div>
                    <div v-else-if="activity.type === 'leave_request'" class="p-2 rounded-full bg-amber-100 dark:bg-amber-900">
                      <FileText class="h-4 w-4 text-amber-600 dark:text-amber-300" />
                    </div>
                  </div>
                  <div class="ml-3 flex-1">
                    <p class="text-sm font-medium text-gray-900 dark:text-gray-100">{{ activity.user }}</p>
                    <p class="text-sm text-gray-500 dark:text-gray-400">{{ activity.details }}</p>
                    <p class="text-xs text-gray-400 dark:text-gray-500">{{ formatDateTime(activity.time) }}</p>
                  </div>
                </div>
              </div>
            </div>

            <!-- Top Performers -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100 mb-4">
                Top Performers
              </h3>
              <div class="space-y-4">
                <div v-for="(performer, index) in topPerformers" :key="performer.user_id" class="flex items-center">
                  <div class="flex-shrink-0 w-8 h-8 flex items-center justify-center rounded-full bg-blue-100 dark:bg-blue-900 text-blue-600 dark:text-blue-300 font-bold">
                    {{ index + 1 }}
                  </div>
                  <div class="ml-3 flex-1">
                    <div class="flex items-center justify-between">
                      <p class="text-sm font-medium text-gray-900 dark:text-gray-100">{{ performer.name }}</p>
                      <p class="text-sm font-semibold text-blue-600 dark:text-blue-400">{{ performer.attendance_rate }}%</p>
                    </div>
                    <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-1">
                      <div class="bg-blue-600 dark:bg-blue-500 h-2 rounded-full" :style="{ width: `${performer.attendance_rate}%` }"></div>
                    </div>
                    <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
                      {{ performer.present_days }}/{{ performer.total_days }} days, {{ performer.late_arrivals }} late
                    </p>
                  </div>
                </div>
              </div>
            </div>

            <!-- Pending Leave Requests -->
            <div class="bg-white dark:bg-gray-800 overflow-hidden shadow-sm sm:rounded-lg p-6">
              <div class="flex items-center justify-between mb-4">
                <h3 class="text-lg font-medium text-gray-900 dark:text-gray-100">
                  Pending Leave Requests
                </h3>
                <Link :href="route('admin.leave-requests.index')" class="text-sm text-blue-600 dark:text-blue-400 hover:underline">
                  View All
                </Link>
              </div>
              <div v-if="pendingLeaveRequests.length > 0" class="space-y-4">
                <div v-for="request in pendingLeaveRequests" :key="request.id" class="border-b border-gray-200 dark:border-gray-700 pb-3 last:border-0 last:pb-0">
                  <div class="flex items-center justify-between">
                    <p class="text-sm font-medium text-gray-900 dark:text-gray-100">{{ request.user.name }}</p>
                    <span class="px-2 py-1 text-xs rounded-full bg-amber-100 dark:bg-amber-900 text-amber-800 dark:text-amber-200">
                      Pending
                    </span>
                  </div>
                  <p class="text-sm text-gray-600 dark:text-gray-300 mt-1">
                    {{ request.duration_days }} days {{ request.leave_type }} leave
                  </p>
                  <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">
                    {{ formatDate(request.start_date) }} - {{ formatDate(request.end_date) }}
                  </p>
                </div>
              </div>
              <div v-else class="text-center py-4">
                <Calendar class="h-8 w-8 text-gray-400 mx-auto" />
                <p class="mt-2 text-sm text-gray-500 dark:text-gray-400">No pending leave requests</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </AppLayout>
</template>

<style scoped>
.btn-primary {
  @apply inline-flex items-center px-4 py-2 bg-blue-600 border border-transparent rounded-md font-semibold text-xs text-white uppercase tracking-widest hover:bg-blue-700 focus:bg-blue-700 active:bg-blue-800 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition ease-in-out duration-150;
}

.btn-secondary {
  @apply inline-flex items-center px-4 py-2 bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-600 rounded-md font-semibold text-xs text-gray-700 dark:text-gray-300 uppercase tracking-widest shadow-sm hover:bg-gray-50 dark:hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition ease-in-out duration-150;
}
</style>
